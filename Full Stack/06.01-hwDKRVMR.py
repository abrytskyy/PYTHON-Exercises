#3. Найдите среднее значение элементов в каждом подсписке и верните новый список со средними значениями.
a = [1, 2, 3, 4, 5]
b = [10, 20, 30, 40, 50]
c = []
c.extend([(sum(a)/len(a)), (sum(b)/len(b))])
print(c)


a = [1, 2, 3, 4, 5]
b = [10, 20, 30, 40, 50]
c = []
c.append(sum(a)/len(a))
c.append(sum(b)/len(b))
print(c)


# 2. Создайте список строк и верните новый список, содержащий только строки,
# которые начинаются и заканчиваются на одну и ту же букву.
a = ["makem", "Ju", "Mad", "universalu", "Joj"]
a1 = []
for i in a:
    if i[0].lower() == i[-1]:
        a1.append(i)
print(a1)

#1. Создайте список строк и верните новый список, содержащий только строки,
# которые состоят только из заглавных букв и имеют нечетную длину.
a = ["make", "Ju", "Mad", "universal", "Joj"]
a1 = []
for i in a:
    if len(i) % 2 == 1 and i[0].isupper():
        a1.append(i)
print(a1)


### RVMartirosov

# 3. Создайте список чисел и верните новый список, содержащий только числа,
# которые являются простыми числами и палиндромами одновременно.
a = [121, -212, 7227, 323, 435]
a1 = []
for i in a:
    i = str(i)
    if i[::-1] == i:
        a1.append(i)
print(a1)





#2. Создайте список чисел и верните новый список, содержащий только числа,
# которые являются суммой цифр своего позиционного номера в списке.
a = [1, -2, 7, 3, 4]
a1 =[]
for i in range(len(a)):
    if i == a[i]:
        a1.append(i)


#1. Создайте два списка и верните новый список, содержащий элементы,
#которые присутствуют только в одном из списков и имеют длину больше 3 символов.

a = ["make", "ju", "mad", "universal", "j"]
b = ["mak", "just", "made", "uni", "jooo"]
c = a + b
print(set(c))


### Катерина


# 3. Проверьте, содержит ли каждая строка в списке все гласные буквы (a, e, i, o, u) без учета регистра.
a = ["make", "just", "made", "universal", "jooo"]
a1 = []
for i in a:
    for j in i:
        if j in ["a", "e", "i", "o", "u"]:
            a1.append(1)
        else:
            a1.append(0)
    a1.append("    ")
print(a1)


#2. Создайте функцию, которая принимает список строк и возвращает новый список,
#содержащий только строки, которые имеют одинаковую длину и начинаются с одной и той же буквы.
a = ["make", "just", "made", "universal", "jooo"]
a1 = []
for i in a:
    for j in a:
        if i != j and len(i) == len(j) and i[0] == j[0] :
            a1.append([i,j])
print(a1)





# 1. Проверьте, является ли каждый элемент списка положительным числом и является ли сумма всех элементов списка положительной.
a = [1, 2, -7, 1, 1]
b = True
for i in a:
    if i < 0:
        if sum(a) < 0:
            b = False
            break
    else:
        continue
print(b)

###Denwork21

#3. Отсортируйте список чисел в порядке убывания суммы их цифр
a = [1, 2, 7, 4, 5]
a.sort()
a = a[::-1]


print(a)


a = [1, 2, 7, 4, 5]
print(sorted(a))

a = [1, 2, 7, 4, 5]
a.sort()

print(a)


#2. Определите, является ли каждый элемент списка списком.

a = [[1], [2], 3, 4, 5]
for i in a:
    if type(i) != list:
        print("Not")
        break
    else:
        continue


# 1. Найдите сумму элементов в каждом подсписке и верните новый список с суммами.

a = [1, 2, 3, 4, 5]
b = [10, 20, 30, 40, 50]
c = list()
c.append(sum(a))
c.append(sum(b))
print(c)

