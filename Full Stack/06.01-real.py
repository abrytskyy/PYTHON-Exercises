# Вводятся названия городов в одну строчку через пробел. Необходимо преобразовать входные данные в
# список. Затем, перебрать его циклом for и заменить значения элементов на длину названия
# соответствующего города. Результат вывести на экран в виде последовательности
# чисел через пробел в одну строчку.

city = ["Киев", 'вЛьвовhhh', 'Милаhhh', 'Филадельфия']
city_len = []
for i in city:
    city_len.append(len(i))
print(city_len)

# (На использование цикла while). Вводятся названия книг (каждое с новой строки).
# Удалить из введенного списка все названия, состоящие из двух и более слов
# (слова в названиях разделяются пробелом). Результат вывести на экран в виде строки из
# оставшихся названий через пробел.
#
# P. S. Для считывания списка целиком в программе уже записаны начальные строчки
#
# Sample Input:
#
# Муму
# Евгений Онегин
# Сияние
# Мастер и Маргарита
# Пиковая дама
# Колобок
# Sample Output:
#
# Муму Сияние Колобок
lst = ['Муму', 'Евгений Онегин', 'Сияние', 'Мастер и Маргарита', 'Пиковая дама', 'Колобок']
lst1 = []
for i in lst:
    if i.count(" ") == 0:
        lst1.append(i)
print(lst1)


lst = ['Муму', 'Евгений Онегин', 'Сияние', 'Мастер и Маргарита', 'Пиковая дама', 'Колобок']
lst1 = []
for i in lst:
    if " " not in i:
        lst1.append(i)
print(lst1)

# Вводится список названий городов в одну строчку через пробел. Перебрать все эти названия
# с помощью цикла for и определить, начинается ли название следующего города на последнюю букву
# предыдущего города в списке. Если последними встречаются буквы 'ь', 'ъ', 'ы',
# то берется следующая с конца буква. Вывести на экран ДА, если последовательность
# удовлетворяет этому правилу и НЕТ - в противном случае.

city = ["Киевы", 'ВЛьвовhhh', 'Милаhhы', 'Филадельфия']


#city = ["Киев", 'вЛьвовhhh', 'Милаhhh', 'Филадельфия']
# let = ['ь', 'ъ', 'ы']
# y = -1
# for x in range(len(city)-1):
#     if city[x][-1] in let:
#         y = -2
#         if city[x+1][0].lower() != city[x][y].lower():
#             print("NO")
#             break
#     elif city[x + 1][0].lower() != city[x][y].lower():
#         print("NO")
#         break
# else:
#     print("Yes")





# С помощью функции range() сформируйте следующую последовательность чисел:
#
# 10, 9, 8, ..., 0
#
# Результат выведите в виде последовательности чисел, записанных через пробел в одну строчку.
#
# Sample Input:
#
# Sample Output:
#
# 10 9 8 7 6 5 4 3 2 1 0
print(*range (10,-1,-1))



# Вводится список имен студентов в одну строчку через пробел.
# Определить, что хотя бы одно имя в этом списке
# начинается и заканчивается на ту же самую букву (без учета регистра).
# Реализовать программу с использованием цикла while
#     и оператора break. Вывести ДА, если условие выполняется и НЕТ - в противном случае.
sp = 'Петр Аннаf Иван Сергей Михаил Федор'
names= sp.split()
for x in names:
    if x[0].lower() == x[-1]:
        print("Yes")
        break
    else:
        print("No")


# Вводится список названий городов в одну строчку через пробел. Определить,
# что в этом списке все города имеют длину более 5 символов.
# Реализовать программу с использованием цикла while и оператора break.
# Вывести ДА, если условие выполняется и НЕТ - в противном случае.
city = ["Киевee", 'Львовhhh', 'Милаhhhн', 'Филадельфия']
x = 0
while x < len(city):
    if len(city[x]) < 5:
        print("No")
        break
    else:
        print("Yes")
    x += 1



city = ["Киев", 'Львовhhh', 'Милаhhhн', 'Филадельфия']
for x in city:
    if len(x) < 5:
        print("No")
        break
    else:
        print("Yes")


# . На каждой итерации цикла вводится целое число.
# Необходимо подсчитать произведение только положительных чисел, до тех пор, пока не будет введено значение 0.
# Реализовать пропуск вычислений с помощью оператора continue, а также использовать цикл while.
# Результат произведения вывести на экран.
#
# Sample Input:
#
# 2
# -1
# 3
# 2
# -5
# 7
# 0
# Sample Output:

result = 1
while True:
    a = int(input("input: "))
    if a > 0:
        result = a*result
    elif a == 0:
        break
print(result)



# Последовательность Фибоначчи образуется так: первые два числа равны 1 и 1, а
# каждое последующее равно сумме двух предыдущих. Имеем такую последовательность чисел: 1, 1, 2, 3, 5, 8, 13, ...
# Постройте последовательность Фибоначчи длиной n (n вводится с клавиатуры). Результат отобразите в виде строки полученных
# чисел, записанных через пробел. Программу реализовать при помощи цикла while.
#
# Sample Input:
#
# 8
# Sample Output:
#
# 1 1 2 3 5 8 13 21
n = 8
i = 0
lst = []
while i < n:
    if i < 2:
        lst.append(1)
    else:
        lst.append(lst[i-2] + lst[i-1])
    i += 1
print(lst)



# dva celyh polozhytelnyh chisla n < m. Vyvesti pri pomoshchi while kvadraty chisel v diapazone [n;m]
n = 2
m = 6
while n <= m:
    print(n**2)
    n += 1
